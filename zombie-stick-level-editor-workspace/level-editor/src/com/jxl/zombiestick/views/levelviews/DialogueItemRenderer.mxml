<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false"
				currentState="hidden"
				creationComplete="init()">
	
	
	<fx:Metadata>
		[Event(name="deleteDialogue", type="com.jxl.zombiestick.events.DialogueItemRendererEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.jxl.zombiestick.constants.EmotionTypes;
			import com.jxl.zombiestick.constants.subtypes.CharacterTypes;
			import com.jxl.zombiestick.events.DialogueItemRendererEvent;
			import com.jxl.zombiestick.vo.DialogueVO;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var dialogue:DialogueVO;
			
			[Bindable]
			public var characters:ArrayCollection;
			
			[Bindable]
			public var emotions:ArrayCollection;
			
			private var audioFileReference:File;
			private var sound:Sound;
			private var soundChannel:SoundChannel;
			
			private function init():void
			{
				characters = new ArrayCollection();
				characters.addItem(CharacterTypes.JESTERXL);
				characters.addItem(CharacterTypes.FREEMAN);
				
				emotions = new ArrayCollection();
				emotions.addItem(EmotionTypes.NORMAL);
				emotions.addItem(EmotionTypes.MAD);
			}
			
			public override function set data(value:Object):void
			{
				super.data = value;
				
				dialogue = null;
				
				if(value && value is DialogueVO)
				{
					dialogue = value as DialogueVO;
					currentState = "dialogue";
				}
				else
				{
					currentState = "hidden";
				}
			}
			
			private function onChangeEmotion():void
			{
				dialogue.emotion = emotionComboBox.selectedItem;
			}
			
			private function onChangeCharacter():void
			{
				dialogue.characterName = characterComboBox.selectedItem;
			}
			
			private function onDelete():void
			{
				var evt:DialogueItemRendererEvent = new DialogueItemRendererEvent(DialogueItemRendererEvent.DELETE_DIALOGUE);
				evt.dialogue = dialogue;
				dispatchEvent(evt);
			}
			
			
			private function onBrowseForAudioFile():void
			{
				if(dialogue == null)
					return;
				
				if(audioFileReference == null)
				{
					audioFileReference = new File();
					audioFileReference.addEventListener(Event.SELECT, onFileSelected);
				}
				
				audioFileReference.browseForOpen("Audio File", [new FileFilter("mp3", "*.mp3")]); 
			}
			
			private function onFileSelected(event:Event):void
			{
				dialogue.audioFile = audioFileReference.url;
			}
			
			private function onPlayAudioFile():void
			{
				if(dialogue.audioFile && dialogue.audioFile != "")
				{
					playSound(dialogue.audioFile);
				}
			}
			
			private function playSound(url:String):void
			{
				stopSound();
				if(sound)
				{
					try
					{
						sound.close();
					} 
					catch(error:Error) 
					{
						
					}
				}
				
				sound = new Sound();
				sound.load(new URLRequest(url));
				soundChannel = sound.play();
			}
			
			
			private function stopSound():void
			{
				if(soundChannel)
					soundChannel.stop();
			}
			
			private function onStopAudioFile():void
			{
				stopSound();
			}
			
			private function onDeleteAudioFile():void
			{
				if(dialogue)
					dialogue.audioFile = null;
			}
			
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="hidden" />
		<s:State name="dialogue" />
	</s:states>
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#EEEEEE" />
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="#333333" />
		</s:stroke>
	</s:Rect>
	
	<s:Button label="X" click="onDelete()" right="0" top="0" width="40" />
	
	<s:Form>
		<s:layout>
			<s:FormLayout gap="-10" />
		</s:layout>
		
		<s:FormItem label="Character:">
			<s:ComboBox id="characterComboBox" dataProvider="{characters}" selectedItem="{dialogue.characterName}" change="onChangeCharacter()" />
		</s:FormItem>
		<s:FormItem label="Emotion:">
			<s:ComboBox id="emotionComboBox" dataProvider="{emotions}" selectedItem="{dialogue.emotion}" change="onChangeEmotion()" />
		</s:FormItem>
		<s:FormItem label="Message:">
			<mx:TextArea id="messageTextArea" text="{dialogue.message}" change="dialogue.message = messageTextArea.text" />
		</s:FormItem>
		<s:FormItem label="Audio:">
			<mx:TextInput id="audioFilePathTextInput" width="60" toolTip="{dialogue.audioFile}" text="{dialogue.audioFile}" editable="false" />
			<s:Button label="Browse" click="onBrowseForAudioFile()" />
			<s:Button label="Play" click="onPlayAudioFile()" />
			<s:Button label="Stop" click="onStopAudioFile()" />
			<s:Button label="X" width="40" click="onDeleteAudioFile()" />
		</s:FormItem>
	</s:Form>
	
</s:ItemRenderer>
