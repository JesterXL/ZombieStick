<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="100%" xmlns:layersviews="com.jxl.zombiestick.views.levelviews.layersviews.*">
	
	<fx:Script>
		<![CDATA[
			import com.jxl.zombiestick.events.LayerItemRendererEvent;
			import com.jxl.zombiestick.events.view.LayersPanelEvent;
			import com.jxl.zombiestick.vo.GameObjectVO;
			import com.jxl.zombiestick.vo.LevelVO;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var level:LevelVO;
			
			[Bindable]
			public var selectedIndices:Vector.<int>;
			
			private var _selections:ArrayCollection;
			private var selectionsDirty:Boolean = false;
			
			public function get selections():ArrayCollection { return _selections; }
			public function set selections(value:ArrayCollection):void
			{
				if(value !== _selections)
				{
					_selections = value;
					selectionsDirty = true;
					invalidateProperties();
				}
			}
			
			protected override function commitProperties():void
			{
				super.commitProperties();
				
				if(selectionsDirty)
				{
					selectionsDirty = false;
					var indices:Vector.<int> = new Vector.<int>();
					if(_selections)
					{
						var len:int = _selections.length;
						for(var index:int = 0; index < len; index++)
						{
							var gameObject:GameObjectVO = _selections[index] as GameObjectVO;
							var listIndex:int = level.events.getItemIndex(gameObject);
							indices[index] = listIndex;
						}
					}
					selectedIndices = indices;
				}
			}
			
			private function onDeleteGameObject(event:LayerItemRendererEvent):void
			{
				level.events.removeItemAt(level.events.getItemIndex(event.gameObject));
			}
			
			private function onLayersChange():void
			{
				var event:LayersPanelEvent = new LayersPanelEvent(LayersPanelEvent.SELECTIONS_CHANGED);
				event.indices = layersList.selectedIndices;
				dispatchEvent(event);
			}
			
			
		]]>
	</fx:Script>
	
	
	<s:Label text="Layers" />
	<layersviews:LayersList id="layersList"
							dataProvider="{level.events}" width="100%" height="100%" deleteGameObject="onDeleteGameObject(event)"
							allowMultipleSelection="true"
							selectedIndices="{selectedIndices}"
							change="onLayersChange()"/>
	
</s:VGroup>
